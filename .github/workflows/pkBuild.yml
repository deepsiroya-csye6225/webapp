name: AMI Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Zip folder creation
      run: |
        zip -r webapp.zip . -x ".git*" ".github*" "node_modules*"

    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Set .env file
      run: |
        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        echo DB_USER=${{ secrets.DB_USER }} >> .env
        echo DB_HOSTNAME=${{ secrets.DB_HOSTNAME }} >> .env


    - name: Setup Packer
      run: |
        curl -Lo packer.zip https://releases.hashicorp.com/packer/1.9.4/packer_1.9.4_linux_amd64.zip
        rm -rf packer
        unzip packer.zip
        sudo mv packer /usr/local/bin/


    - name: Build AMI
      env:
        AWS_DEFAULT_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_HOSTNAME: ${{ secrets.DB_HOSTNAME }}
      run: |
          cd pkr
          packer init aws-debian.pkr.hcl
          packer validate aws-debian.pkr.hcl
          packer build aws-debian.pkr.hcl
    
    - name: Retrieve AMI ID
      run: |
        AMI_ID=$(jq -r '.builds[0].artifact_id' manifest.json | cut -d ':' -f 2)
        echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV
      working-directory: pkr

    - name: Share AMI with DEMO Account
      run: |
        DEMO_ACCOUNT_ID="704056066364"
        aws ec2 modify-image-attribute --image-id ${{ env.AMI_ID }} --launch-permission "Add=[{UserId=$DEMO_ACCOUNT_ID}]"
      env:
        AWS_DEFAULT_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        AMI_ID: ${{ env.AMI_ID }}


